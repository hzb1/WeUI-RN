// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Button Button 演示测试 1`] = `
<RNCSafeAreaView
  edges={
    {
      "bottom": "additive",
      "left": "additive",
      "right": "additive",
      "top": "additive",
    }
  }
  style={
    [
      {
        "backgroundColor": "#ededed",
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <RCTScrollView
    collapsable={false}
    scrollEventThrottle={0.0001}
    style={{}}
  >
    <View>
      <View
        style={
          {
            "padding": 40,
            "paddingTop": 20,
          }
        }
      >
        <Text
          style={
            {
              "color": "rgba(0, 0, 0, 0.9)",
              "fontSize": 20,
              "fontWeight": "400",
              "textAlign": "left",
            }
          }
        >
          Button
        </Text>
        <Text
          style={
            {
              "color": "rgba(0, 0, 0, 0.55)",
              "fontSize": 14,
              "marginTop": 4,
              "textAlign": "left",
            }
          }
        >
          按钮
        </Text>
      </View>
      <View
        style={{}}
      >
        <View
          style={{}}
        >
          <View
            style={
              [
                {
                  "flexDirection": "column",
                  "gap": 16,
                  "marginBottom": 15,
                  "marginHorizontal": "auto",
                  "padding": 15,
                  "width": "100%",
                },
                undefined,
              ]
            }
          >
            <View
              accessibilityState={
                {
                  "busy": undefined,
                  "checked": undefined,
                  "disabled": false,
                  "expanded": undefined,
                  "selected": undefined,
                }
              }
              accessibilityValue={
                {
                  "max": undefined,
                  "min": undefined,
                  "now": undefined,
                  "text": undefined,
                }
              }
              accessible={true}
              collapsable={false}
              focusable={true}
              onBlur={[Function]}
              onClick={[Function]}
              onFocus={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                {
                  "alignItems": "center",
                  "backgroundColor": "#07c160",
                  "borderRadius": 8,
                  "flexDirection": "row",
                  "gap": 8,
                  "justifyContent": "center",
                  "marginHorizontal": "auto",
                  "paddingHorizontal": 24,
                  "paddingVertical": 12,
                  "width": 184,
                }
              }
            >
              <Text
                style={
                  {
                    "color": "#fff",
                    "fontSize": 17,
                    "fontWeight": "500",
                    "lineHeight": 24.00000007,
                  }
                }
              >
                主要操作
              </Text>
            </View>
            <View
              accessibilityState={
                {
                  "busy": undefined,
                  "checked": undefined,
                  "disabled": false,
                  "expanded": undefined,
                  "selected": undefined,
                }
              }
              accessibilityValue={
                {
                  "max": undefined,
                  "min": undefined,
                  "now": undefined,
                  "text": undefined,
                }
              }
              accessible={true}
              collapsable={false}
              focusable={true}
              onBlur={[Function]}
              onClick={[Function]}
              onFocus={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                {
                  "alignItems": "center",
                  "backgroundColor": "#07c160",
                  "borderRadius": 8,
                  "flexDirection": "row",
                  "gap": 8,
                  "justifyContent": "center",
                  "marginHorizontal": "auto",
                  "paddingHorizontal": 24,
                  "paddingVertical": 12,
                  "width": 184,
                }
              }
            >
              <View
                style={
                  {
                    "alignItems": "center",
                    "justifyContent": "center",
                  }
                }
              >
                <View
                  collapsable={false}
                  jestAnimatedStyle={
                    {
                      "value": {
                        "transform": [
                          {
                            "rotate": "0deg",
                          },
                        ],
                      },
                    }
                  }
                  style={
                    {
                      "transform": [
                        {
                          "rotate": "0deg",
                        },
                      ],
                    }
                  }
                >
                  <RNSVGSvgView
                    align="xMidYMid"
                    bbHeight={20}
                    bbWidth={20}
                    color="#fff"
                    focusable={false}
                    height={20}
                    meetOrSlice={0}
                    minX={0}
                    minY={0}
                    style={
                      [
                        {
                          "backgroundColor": "transparent",
                          "borderWidth": 0,
                        },
                        {
                          "flex": 0,
                          "height": 20,
                          "width": 20,
                        },
                      ]
                    }
                    tintColor="#fff"
                    vbHeight={80}
                    vbWidth={80}
                    width={20}
                    xmlns="http://www.w3.org/2000/svg"
                    xmlnsXlink="http://www.w3.org/1999/xlink"
                  >
                    <RNSVGGroup
                      fill={
                        {
                          "payload": 4278190080,
                          "type": 0,
                        }
                      }
                    >
                      <RNSVGDefs>
                        <RNSVGLinearGradient
                          gradient={
                            [
                              0,
                              16777215,
                              1,
                              1308622847,
                            ]
                          }
                          gradientTransform={null}
                          gradientUnits={0}
                          name="linearGradient-1"
                          x1="94.0869141%"
                          x2="94.0869141%"
                          y1="0%"
                          y2="90.559082%"
                        />
                        <RNSVGLinearGradient
                          gradient={
                            [
                              0,
                              -1,
                              1,
                              1308622847,
                            ]
                          }
                          gradientTransform={null}
                          gradientUnits={0}
                          name="linearGradient-2"
                          x1="100%"
                          x2="100%"
                          y1="8.67370605%"
                          y2="90.6286621%"
                        />
                      </RNSVGDefs>
                      <RNSVGGroup
                        fill={null}
                        fillRule={0}
                        opacity={0.9}
                        propList={
                          [
                            "fill",
                            "fillRule",
                            "stroke",
                            "strokeWidth",
                          ]
                        }
                        stroke={null}
                        strokeWidth={1}
                      >
                        <RNSVGGroup
                          fill={
                            {
                              "payload": 4278190080,
                              "type": 0,
                            }
                          }
                        >
                          <RNSVGPath
                            d="M40,0 C62.09139,0 80,17.90861 80,40 C80,62.09139 62.09139,80 40,80 L40,73 C58.2253967,73 73,58.2253967 73,40 C73,21.7746033 58.2253967,7 40,7 L40,0 Z"
                            fill={
                              {
                                "brushRef": "linearGradient-1",
                                "type": 1,
                              }
                            }
                            propList={
                              [
                                "fill",
                              ]
                            }
                          />
                          <RNSVGPath
                            d="M40,0 L40,7 C21.7746033,7 7,21.7746033 7,40 C7,58.2253967 21.7746033,73 40,73 L40,80 C17.90861,80 0,62.09139 0,40 C0,17.90861 17.90861,0 40,0 Z"
                            fill={
                              {
                                "brushRef": "linearGradient-2",
                                "type": 1,
                              }
                            }
                            propList={
                              [
                                "fill",
                              ]
                            }
                          />
                          <RNSVGCircle
                            cx={40.5}
                            cy={3.5}
                            fill={
                              {
                                "payload": 4294967295,
                                "type": 0,
                              }
                            }
                            name="Oval"
                            propList={
                              [
                                "fill",
                              ]
                            }
                            r={3.5}
                          />
                        </RNSVGGroup>
                      </RNSVGGroup>
                    </RNSVGGroup>
                  </RNSVGSvgView>
                </View>
              </View>
              <Text
                style={
                  {
                    "color": "#fff",
                    "fontSize": 17,
                    "fontWeight": "500",
                    "lineHeight": 24.00000007,
                  }
                }
              />
            </View>
            <View
              accessibilityState={
                {
                  "busy": undefined,
                  "checked": undefined,
                  "disabled": false,
                  "expanded": undefined,
                  "selected": undefined,
                }
              }
              accessibilityValue={
                {
                  "max": undefined,
                  "min": undefined,
                  "now": undefined,
                  "text": undefined,
                }
              }
              accessible={true}
              collapsable={false}
              focusable={true}
              onBlur={[Function]}
              onClick={[Function]}
              onFocus={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                {
                  "alignItems": "center",
                  "backgroundColor": "#07c160",
                  "borderRadius": 8,
                  "flexDirection": "row",
                  "gap": 8,
                  "justifyContent": "center",
                  "marginHorizontal": "auto",
                  "paddingHorizontal": 24,
                  "paddingVertical": 12,
                  "width": 184,
                }
              }
            >
              <View
                style={
                  {
                    "alignItems": "center",
                    "justifyContent": "center",
                  }
                }
              >
                <View
                  collapsable={false}
                  jestAnimatedStyle={
                    {
                      "value": {
                        "transform": [
                          {
                            "rotate": "0deg",
                          },
                        ],
                      },
                    }
                  }
                  style={
                    {
                      "transform": [
                        {
                          "rotate": "0deg",
                        },
                      ],
                    }
                  }
                >
                  <RNSVGSvgView
                    align="xMidYMid"
                    bbHeight={20}
                    bbWidth={20}
                    color="#fff"
                    focusable={false}
                    height={20}
                    meetOrSlice={0}
                    minX={0}
                    minY={0}
                    style={
                      [
                        {
                          "backgroundColor": "transparent",
                          "borderWidth": 0,
                        },
                        {
                          "flex": 0,
                          "height": 20,
                          "width": 20,
                        },
                      ]
                    }
                    tintColor="#fff"
                    vbHeight={80}
                    vbWidth={80}
                    width={20}
                    xmlns="http://www.w3.org/2000/svg"
                    xmlnsXlink="http://www.w3.org/1999/xlink"
                  >
                    <RNSVGGroup
                      fill={
                        {
                          "payload": 4278190080,
                          "type": 0,
                        }
                      }
                    >
                      <RNSVGDefs>
                        <RNSVGLinearGradient
                          gradient={
                            [
                              0,
                              16777215,
                              1,
                              1308622847,
                            ]
                          }
                          gradientTransform={null}
                          gradientUnits={0}
                          name="linearGradient-1"
                          x1="94.0869141%"
                          x2="94.0869141%"
                          y1="0%"
                          y2="90.559082%"
                        />
                        <RNSVGLinearGradient
                          gradient={
                            [
                              0,
                              -1,
                              1,
                              1308622847,
                            ]
                          }
                          gradientTransform={null}
                          gradientUnits={0}
                          name="linearGradient-2"
                          x1="100%"
                          x2="100%"
                          y1="8.67370605%"
                          y2="90.6286621%"
                        />
                      </RNSVGDefs>
                      <RNSVGGroup
                        fill={null}
                        fillRule={0}
                        opacity={0.9}
                        propList={
                          [
                            "fill",
                            "fillRule",
                            "stroke",
                            "strokeWidth",
                          ]
                        }
                        stroke={null}
                        strokeWidth={1}
                      >
                        <RNSVGGroup
                          fill={
                            {
                              "payload": 4278190080,
                              "type": 0,
                            }
                          }
                        >
                          <RNSVGPath
                            d="M40,0 C62.09139,0 80,17.90861 80,40 C80,62.09139 62.09139,80 40,80 L40,73 C58.2253967,73 73,58.2253967 73,40 C73,21.7746033 58.2253967,7 40,7 L40,0 Z"
                            fill={
                              {
                                "brushRef": "linearGradient-1",
                                "type": 1,
                              }
                            }
                            propList={
                              [
                                "fill",
                              ]
                            }
                          />
                          <RNSVGPath
                            d="M40,0 L40,7 C21.7746033,7 7,21.7746033 7,40 C7,58.2253967 21.7746033,73 40,73 L40,80 C17.90861,80 0,62.09139 0,40 C0,17.90861 17.90861,0 40,0 Z"
                            fill={
                              {
                                "brushRef": "linearGradient-2",
                                "type": 1,
                              }
                            }
                            propList={
                              [
                                "fill",
                              ]
                            }
                          />
                          <RNSVGCircle
                            cx={40.5}
                            cy={3.5}
                            fill={
                              {
                                "payload": 4294967295,
                                "type": 0,
                              }
                            }
                            name="Oval"
                            propList={
                              [
                                "fill",
                              ]
                            }
                            r={3.5}
                          />
                        </RNSVGGroup>
                      </RNSVGGroup>
                    </RNSVGGroup>
                  </RNSVGSvgView>
                </View>
              </View>
              <Text
                style={
                  {
                    "color": "#fff",
                    "fontSize": 17,
                    "fontWeight": "500",
                    "lineHeight": 24.00000007,
                  }
                }
              >
                主要操作
              </Text>
            </View>
            <View
              accessibilityState={
                {
                  "busy": undefined,
                  "checked": undefined,
                  "disabled": true,
                  "expanded": undefined,
                  "selected": undefined,
                }
              }
              accessibilityValue={
                {
                  "max": undefined,
                  "min": undefined,
                  "now": undefined,
                  "text": undefined,
                }
              }
              accessible={true}
              collapsable={false}
              focusable={true}
              onBlur={[Function]}
              onClick={[Function]}
              onFocus={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                {
                  "alignItems": "center",
                  "backgroundColor": "rgba(0, 0, 0, 0.05)",
                  "borderRadius": 8,
                  "flexDirection": "row",
                  "gap": 8,
                  "justifyContent": "center",
                  "marginHorizontal": "auto",
                  "paddingHorizontal": 24,
                  "paddingVertical": 12,
                  "width": 184,
                }
              }
            >
              <Text
                style={
                  {
                    "color": "rgba(0, 0, 0, 0.15)",
                    "fontSize": 17,
                    "fontWeight": "500",
                    "lineHeight": 24.00000007,
                  }
                }
              >
                主要操作
              </Text>
            </View>
            <View
              accessibilityState={
                {
                  "busy": undefined,
                  "checked": undefined,
                  "disabled": false,
                  "expanded": undefined,
                  "selected": undefined,
                }
              }
              accessibilityValue={
                {
                  "max": undefined,
                  "min": undefined,
                  "now": undefined,
                  "text": undefined,
                }
              }
              accessible={true}
              collapsable={false}
              focusable={true}
              onBlur={[Function]}
              onClick={[Function]}
              onFocus={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                {
                  "alignItems": "center",
                  "backgroundColor": "rgba(0, 0, 0, 0.05)",
                  "borderRadius": 8,
                  "flexDirection": "row",
                  "gap": 8,
                  "justifyContent": "center",
                  "marginHorizontal": "auto",
                  "paddingHorizontal": 24,
                  "paddingVertical": 12,
                  "width": 184,
                }
              }
            >
              <Text
                style={
                  {
                    "color": "rgba(0, 0, 0, 0.9)",
                    "fontSize": 17,
                    "fontWeight": "500",
                    "lineHeight": 24.00000007,
                  }
                }
              >
                次要操作
              </Text>
            </View>
            <View
              accessibilityState={
                {
                  "busy": undefined,
                  "checked": undefined,
                  "disabled": false,
                  "expanded": undefined,
                  "selected": undefined,
                }
              }
              accessibilityValue={
                {
                  "max": undefined,
                  "min": undefined,
                  "now": undefined,
                  "text": undefined,
                }
              }
              accessible={true}
              collapsable={false}
              focusable={true}
              onBlur={[Function]}
              onClick={[Function]}
              onFocus={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                {
                  "alignItems": "center",
                  "backgroundColor": "rgba(0, 0, 0, 0.05)",
                  "borderRadius": 8,
                  "flexDirection": "row",
                  "gap": 8,
                  "justifyContent": "center",
                  "marginHorizontal": "auto",
                  "paddingHorizontal": 24,
                  "paddingVertical": 12,
                  "width": 184,
                }
              }
            >
              <View
                style={
                  {
                    "alignItems": "center",
                    "justifyContent": "center",
                  }
                }
              >
                <View
                  collapsable={false}
                  jestAnimatedStyle={
                    {
                      "value": {
                        "transform": [
                          {
                            "rotate": "0deg",
                          },
                        ],
                      },
                    }
                  }
                  style={
                    {
                      "transform": [
                        {
                          "rotate": "0deg",
                        },
                      ],
                    }
                  }
                >
                  <RNSVGSvgView
                    align="xMidYMid"
                    bbHeight={20}
                    bbWidth={20}
                    color="rgba(0, 0, 0, 0.9)"
                    focusable={false}
                    height={20}
                    meetOrSlice={0}
                    minX={0}
                    minY={0}
                    style={
                      [
                        {
                          "backgroundColor": "transparent",
                          "borderWidth": 0,
                        },
                        {
                          "flex": 0,
                          "height": 20,
                          "width": 20,
                        },
                      ]
                    }
                    tintColor="rgba(0, 0, 0, 0.9)"
                    vbHeight={80}
                    vbWidth={80}
                    width={20}
                    xmlns="http://www.w3.org/2000/svg"
                    xmlnsXlink="http://www.w3.org/1999/xlink"
                  >
                    <RNSVGGroup
                      fill={
                        {
                          "payload": 4278190080,
                          "type": 0,
                        }
                      }
                    >
                      <RNSVGDefs>
                        <RNSVGLinearGradient
                          gradient={
                            [
                              0,
                              0,
                              1,
                              1291845632,
                            ]
                          }
                          gradientTransform={null}
                          gradientUnits={0}
                          name="linearGradient-1"
                          x1="94.0869141%"
                          x2="94.0869141%"
                          y1="0%"
                          y2="90.559082%"
                        />
                        <RNSVGLinearGradient
                          gradient={
                            [
                              0,
                              -16777216,
                              1,
                              1291845632,
                            ]
                          }
                          gradientTransform={null}
                          gradientUnits={0}
                          name="linearGradient-2"
                          x1="100%"
                          x2="100%"
                          y1="8.67370605%"
                          y2="90.6286621%"
                        />
                      </RNSVGDefs>
                      <RNSVGGroup
                        fill={null}
                        fillRule={0}
                        opacity={0.9}
                        propList={
                          [
                            "fill",
                            "fillRule",
                            "stroke",
                            "strokeWidth",
                          ]
                        }
                        stroke={null}
                        strokeWidth={1}
                      >
                        <RNSVGGroup
                          fill={
                            {
                              "payload": 4278190080,
                              "type": 0,
                            }
                          }
                        >
                          <RNSVGPath
                            d="M40,0 C62.09139,0 80,17.90861 80,40 C80,62.09139 62.09139,80 40,80 L40,73 C58.2253967,73 73,58.2253967 73,40 C73,21.7746033 58.2253967,7 40,7 L40,0 Z"
                            fill={
                              {
                                "brushRef": "linearGradient-1",
                                "type": 1,
                              }
                            }
                            propList={
                              [
                                "fill",
                              ]
                            }
                          />
                          <RNSVGPath
                            d="M40,0 L40,7 C21.7746033,7 7,21.7746033 7,40 C7,58.2253967 21.7746033,73 40,73 L40,80 C17.90861,80 0,62.09139 0,40 C0,17.90861 17.90861,0 40,0 Z"
                            fill={
                              {
                                "brushRef": "linearGradient-2",
                                "type": 1,
                              }
                            }
                            propList={
                              [
                                "fill",
                              ]
                            }
                          />
                          <RNSVGCircle
                            cx={40.5}
                            cy={3.5}
                            fill={
                              {
                                "payload": 3858759680,
                                "type": 0,
                              }
                            }
                            name="Oval"
                            propList={
                              [
                                "fill",
                              ]
                            }
                            r={3.5}
                          />
                        </RNSVGGroup>
                      </RNSVGGroup>
                    </RNSVGGroup>
                  </RNSVGSvgView>
                </View>
              </View>
              <Text
                style={
                  {
                    "color": "rgba(0, 0, 0, 0.9)",
                    "fontSize": 17,
                    "fontWeight": "500",
                    "lineHeight": 24.00000007,
                  }
                }
              />
            </View>
            <View
              accessibilityState={
                {
                  "busy": undefined,
                  "checked": undefined,
                  "disabled": false,
                  "expanded": undefined,
                  "selected": undefined,
                }
              }
              accessibilityValue={
                {
                  "max": undefined,
                  "min": undefined,
                  "now": undefined,
                  "text": undefined,
                }
              }
              accessible={true}
              collapsable={false}
              focusable={true}
              onBlur={[Function]}
              onClick={[Function]}
              onFocus={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                {
                  "alignItems": "center",
                  "backgroundColor": "rgba(0, 0, 0, 0.05)",
                  "borderRadius": 8,
                  "flexDirection": "row",
                  "gap": 8,
                  "justifyContent": "center",
                  "marginHorizontal": "auto",
                  "paddingHorizontal": 24,
                  "paddingVertical": 12,
                  "width": 184,
                }
              }
            >
              <View
                style={
                  {
                    "alignItems": "center",
                    "justifyContent": "center",
                  }
                }
              >
                <View
                  collapsable={false}
                  jestAnimatedStyle={
                    {
                      "value": {
                        "transform": [
                          {
                            "rotate": "0deg",
                          },
                        ],
                      },
                    }
                  }
                  style={
                    {
                      "transform": [
                        {
                          "rotate": "0deg",
                        },
                      ],
                    }
                  }
                >
                  <RNSVGSvgView
                    align="xMidYMid"
                    bbHeight={20}
                    bbWidth={20}
                    color="rgba(0, 0, 0, 0.9)"
                    focusable={false}
                    height={20}
                    meetOrSlice={0}
                    minX={0}
                    minY={0}
                    style={
                      [
                        {
                          "backgroundColor": "transparent",
                          "borderWidth": 0,
                        },
                        {
                          "flex": 0,
                          "height": 20,
                          "width": 20,
                        },
                      ]
                    }
                    tintColor="rgba(0, 0, 0, 0.9)"
                    vbHeight={80}
                    vbWidth={80}
                    width={20}
                    xmlns="http://www.w3.org/2000/svg"
                    xmlnsXlink="http://www.w3.org/1999/xlink"
                  >
                    <RNSVGGroup
                      fill={
                        {
                          "payload": 4278190080,
                          "type": 0,
                        }
                      }
                    >
                      <RNSVGDefs>
                        <RNSVGLinearGradient
                          gradient={
                            [
                              0,
                              0,
                              1,
                              1291845632,
                            ]
                          }
                          gradientTransform={null}
                          gradientUnits={0}
                          name="linearGradient-1"
                          x1="94.0869141%"
                          x2="94.0869141%"
                          y1="0%"
                          y2="90.559082%"
                        />
                        <RNSVGLinearGradient
                          gradient={
                            [
                              0,
                              -16777216,
                              1,
                              1291845632,
                            ]
                          }
                          gradientTransform={null}
                          gradientUnits={0}
                          name="linearGradient-2"
                          x1="100%"
                          x2="100%"
                          y1="8.67370605%"
                          y2="90.6286621%"
                        />
                      </RNSVGDefs>
                      <RNSVGGroup
                        fill={null}
                        fillRule={0}
                        opacity={0.9}
                        propList={
                          [
                            "fill",
                            "fillRule",
                            "stroke",
                            "strokeWidth",
                          ]
                        }
                        stroke={null}
                        strokeWidth={1}
                      >
                        <RNSVGGroup
                          fill={
                            {
                              "payload": 4278190080,
                              "type": 0,
                            }
                          }
                        >
                          <RNSVGPath
                            d="M40,0 C62.09139,0 80,17.90861 80,40 C80,62.09139 62.09139,80 40,80 L40,73 C58.2253967,73 73,58.2253967 73,40 C73,21.7746033 58.2253967,7 40,7 L40,0 Z"
                            fill={
                              {
                                "brushRef": "linearGradient-1",
                                "type": 1,
                              }
                            }
                            propList={
                              [
                                "fill",
                              ]
                            }
                          />
                          <RNSVGPath
                            d="M40,0 L40,7 C21.7746033,7 7,21.7746033 7,40 C7,58.2253967 21.7746033,73 40,73 L40,80 C17.90861,80 0,62.09139 0,40 C0,17.90861 17.90861,0 40,0 Z"
                            fill={
                              {
                                "brushRef": "linearGradient-2",
                                "type": 1,
                              }
                            }
                            propList={
                              [
                                "fill",
                              ]
                            }
                          />
                          <RNSVGCircle
                            cx={40.5}
                            cy={3.5}
                            fill={
                              {
                                "payload": 3858759680,
                                "type": 0,
                              }
                            }
                            name="Oval"
                            propList={
                              [
                                "fill",
                              ]
                            }
                            r={3.5}
                          />
                        </RNSVGGroup>
                      </RNSVGGroup>
                    </RNSVGGroup>
                  </RNSVGSvgView>
                </View>
              </View>
              <Text
                style={
                  {
                    "color": "rgba(0, 0, 0, 0.9)",
                    "fontSize": 17,
                    "fontWeight": "500",
                    "lineHeight": 24.00000007,
                  }
                }
              >
                次要操作
              </Text>
            </View>
            <View
              accessibilityState={
                {
                  "busy": undefined,
                  "checked": undefined,
                  "disabled": true,
                  "expanded": undefined,
                  "selected": undefined,
                }
              }
              accessibilityValue={
                {
                  "max": undefined,
                  "min": undefined,
                  "now": undefined,
                  "text": undefined,
                }
              }
              accessible={true}
              collapsable={false}
              focusable={true}
              onBlur={[Function]}
              onClick={[Function]}
              onFocus={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                {
                  "alignItems": "center",
                  "backgroundColor": "rgba(0, 0, 0, 0.05)",
                  "borderRadius": 8,
                  "flexDirection": "row",
                  "gap": 8,
                  "justifyContent": "center",
                  "marginHorizontal": "auto",
                  "paddingHorizontal": 24,
                  "paddingVertical": 12,
                  "width": 184,
                }
              }
            >
              <Text
                style={
                  {
                    "color": "rgba(0, 0, 0, 0.15)",
                    "fontSize": 17,
                    "fontWeight": "500",
                    "lineHeight": 24.00000007,
                  }
                }
              >
                次要操作
              </Text>
            </View>
            <View
              accessibilityState={
                {
                  "busy": undefined,
                  "checked": undefined,
                  "disabled": false,
                  "expanded": undefined,
                  "selected": undefined,
                }
              }
              accessibilityValue={
                {
                  "max": undefined,
                  "min": undefined,
                  "now": undefined,
                  "text": undefined,
                }
              }
              accessible={true}
              collapsable={false}
              focusable={true}
              onBlur={[Function]}
              onClick={[Function]}
              onFocus={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                {
                  "alignItems": "center",
                  "backgroundColor": "#fa5151",
                  "borderRadius": 8,
                  "flexDirection": "row",
                  "gap": 8,
                  "justifyContent": "center",
                  "marginHorizontal": "auto",
                  "paddingHorizontal": 24,
                  "paddingVertical": 12,
                  "width": 184,
                }
              }
            >
              <Text
                style={
                  {
                    "color": "#fff",
                    "fontSize": 17,
                    "fontWeight": "500",
                    "lineHeight": 24.00000007,
                  }
                }
              >
                警示操作
              </Text>
            </View>
            <View
              accessibilityState={
                {
                  "busy": undefined,
                  "checked": undefined,
                  "disabled": false,
                  "expanded": undefined,
                  "selected": undefined,
                }
              }
              accessibilityValue={
                {
                  "max": undefined,
                  "min": undefined,
                  "now": undefined,
                  "text": undefined,
                }
              }
              accessible={true}
              collapsable={false}
              focusable={true}
              onBlur={[Function]}
              onClick={[Function]}
              onFocus={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                {
                  "alignItems": "center",
                  "backgroundColor": "#fa5151",
                  "borderRadius": 8,
                  "flexDirection": "row",
                  "gap": 8,
                  "justifyContent": "center",
                  "marginHorizontal": "auto",
                  "paddingHorizontal": 24,
                  "paddingVertical": 12,
                  "width": 184,
                }
              }
            >
              <View
                style={
                  {
                    "alignItems": "center",
                    "justifyContent": "center",
                  }
                }
              >
                <View
                  collapsable={false}
                  jestAnimatedStyle={
                    {
                      "value": {
                        "transform": [
                          {
                            "rotate": "0deg",
                          },
                        ],
                      },
                    }
                  }
                  style={
                    {
                      "transform": [
                        {
                          "rotate": "0deg",
                        },
                      ],
                    }
                  }
                >
                  <RNSVGSvgView
                    align="xMidYMid"
                    bbHeight={20}
                    bbWidth={20}
                    color="#fff"
                    focusable={false}
                    height={20}
                    meetOrSlice={0}
                    minX={0}
                    minY={0}
                    style={
                      [
                        {
                          "backgroundColor": "transparent",
                          "borderWidth": 0,
                        },
                        {
                          "flex": 0,
                          "height": 20,
                          "width": 20,
                        },
                      ]
                    }
                    tintColor="#fff"
                    vbHeight={80}
                    vbWidth={80}
                    width={20}
                    xmlns="http://www.w3.org/2000/svg"
                    xmlnsXlink="http://www.w3.org/1999/xlink"
                  >
                    <RNSVGGroup
                      fill={
                        {
                          "payload": 4278190080,
                          "type": 0,
                        }
                      }
                    >
                      <RNSVGDefs>
                        <RNSVGLinearGradient
                          gradient={
                            [
                              0,
                              16777215,
                              1,
                              1308622847,
                            ]
                          }
                          gradientTransform={null}
                          gradientUnits={0}
                          name="linearGradient-1"
                          x1="94.0869141%"
                          x2="94.0869141%"
                          y1="0%"
                          y2="90.559082%"
                        />
                        <RNSVGLinearGradient
                          gradient={
                            [
                              0,
                              -1,
                              1,
                              1308622847,
                            ]
                          }
                          gradientTransform={null}
                          gradientUnits={0}
                          name="linearGradient-2"
                          x1="100%"
                          x2="100%"
                          y1="8.67370605%"
                          y2="90.6286621%"
                        />
                      </RNSVGDefs>
                      <RNSVGGroup
                        fill={null}
                        fillRule={0}
                        opacity={0.9}
                        propList={
                          [
                            "fill",
                            "fillRule",
                            "stroke",
                            "strokeWidth",
                          ]
                        }
                        stroke={null}
                        strokeWidth={1}
                      >
                        <RNSVGGroup
                          fill={
                            {
                              "payload": 4278190080,
                              "type": 0,
                            }
                          }
                        >
                          <RNSVGPath
                            d="M40,0 C62.09139,0 80,17.90861 80,40 C80,62.09139 62.09139,80 40,80 L40,73 C58.2253967,73 73,58.2253967 73,40 C73,21.7746033 58.2253967,7 40,7 L40,0 Z"
                            fill={
                              {
                                "brushRef": "linearGradient-1",
                                "type": 1,
                              }
                            }
                            propList={
                              [
                                "fill",
                              ]
                            }
                          />
                          <RNSVGPath
                            d="M40,0 L40,7 C21.7746033,7 7,21.7746033 7,40 C7,58.2253967 21.7746033,73 40,73 L40,80 C17.90861,80 0,62.09139 0,40 C0,17.90861 17.90861,0 40,0 Z"
                            fill={
                              {
                                "brushRef": "linearGradient-2",
                                "type": 1,
                              }
                            }
                            propList={
                              [
                                "fill",
                              ]
                            }
                          />
                          <RNSVGCircle
                            cx={40.5}
                            cy={3.5}
                            fill={
                              {
                                "payload": 4294967295,
                                "type": 0,
                              }
                            }
                            name="Oval"
                            propList={
                              [
                                "fill",
                              ]
                            }
                            r={3.5}
                          />
                        </RNSVGGroup>
                      </RNSVGGroup>
                    </RNSVGGroup>
                  </RNSVGSvgView>
                </View>
              </View>
              <Text
                style={
                  {
                    "color": "#fff",
                    "fontSize": 17,
                    "fontWeight": "500",
                    "lineHeight": 24.00000007,
                  }
                }
              />
            </View>
            <View
              accessibilityState={
                {
                  "busy": undefined,
                  "checked": undefined,
                  "disabled": false,
                  "expanded": undefined,
                  "selected": undefined,
                }
              }
              accessibilityValue={
                {
                  "max": undefined,
                  "min": undefined,
                  "now": undefined,
                  "text": undefined,
                }
              }
              accessible={true}
              collapsable={false}
              focusable={true}
              onBlur={[Function]}
              onClick={[Function]}
              onFocus={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                {
                  "alignItems": "center",
                  "backgroundColor": "#fa5151",
                  "borderRadius": 8,
                  "flexDirection": "row",
                  "gap": 8,
                  "justifyContent": "center",
                  "marginHorizontal": "auto",
                  "paddingHorizontal": 24,
                  "paddingVertical": 12,
                  "width": 184,
                }
              }
            >
              <View
                style={
                  {
                    "alignItems": "center",
                    "justifyContent": "center",
                  }
                }
              >
                <View
                  collapsable={false}
                  jestAnimatedStyle={
                    {
                      "value": {
                        "transform": [
                          {
                            "rotate": "0deg",
                          },
                        ],
                      },
                    }
                  }
                  style={
                    {
                      "transform": [
                        {
                          "rotate": "0deg",
                        },
                      ],
                    }
                  }
                >
                  <RNSVGSvgView
                    align="xMidYMid"
                    bbHeight={20}
                    bbWidth={20}
                    color="#fff"
                    focusable={false}
                    height={20}
                    meetOrSlice={0}
                    minX={0}
                    minY={0}
                    style={
                      [
                        {
                          "backgroundColor": "transparent",
                          "borderWidth": 0,
                        },
                        {
                          "flex": 0,
                          "height": 20,
                          "width": 20,
                        },
                      ]
                    }
                    tintColor="#fff"
                    vbHeight={80}
                    vbWidth={80}
                    width={20}
                    xmlns="http://www.w3.org/2000/svg"
                    xmlnsXlink="http://www.w3.org/1999/xlink"
                  >
                    <RNSVGGroup
                      fill={
                        {
                          "payload": 4278190080,
                          "type": 0,
                        }
                      }
                    >
                      <RNSVGDefs>
                        <RNSVGLinearGradient
                          gradient={
                            [
                              0,
                              16777215,
                              1,
                              1308622847,
                            ]
                          }
                          gradientTransform={null}
                          gradientUnits={0}
                          name="linearGradient-1"
                          x1="94.0869141%"
                          x2="94.0869141%"
                          y1="0%"
                          y2="90.559082%"
                        />
                        <RNSVGLinearGradient
                          gradient={
                            [
                              0,
                              -1,
                              1,
                              1308622847,
                            ]
                          }
                          gradientTransform={null}
                          gradientUnits={0}
                          name="linearGradient-2"
                          x1="100%"
                          x2="100%"
                          y1="8.67370605%"
                          y2="90.6286621%"
                        />
                      </RNSVGDefs>
                      <RNSVGGroup
                        fill={null}
                        fillRule={0}
                        opacity={0.9}
                        propList={
                          [
                            "fill",
                            "fillRule",
                            "stroke",
                            "strokeWidth",
                          ]
                        }
                        stroke={null}
                        strokeWidth={1}
                      >
                        <RNSVGGroup
                          fill={
                            {
                              "payload": 4278190080,
                              "type": 0,
                            }
                          }
                        >
                          <RNSVGPath
                            d="M40,0 C62.09139,0 80,17.90861 80,40 C80,62.09139 62.09139,80 40,80 L40,73 C58.2253967,73 73,58.2253967 73,40 C73,21.7746033 58.2253967,7 40,7 L40,0 Z"
                            fill={
                              {
                                "brushRef": "linearGradient-1",
                                "type": 1,
                              }
                            }
                            propList={
                              [
                                "fill",
                              ]
                            }
                          />
                          <RNSVGPath
                            d="M40,0 L40,7 C21.7746033,7 7,21.7746033 7,40 C7,58.2253967 21.7746033,73 40,73 L40,80 C17.90861,80 0,62.09139 0,40 C0,17.90861 17.90861,0 40,0 Z"
                            fill={
                              {
                                "brushRef": "linearGradient-2",
                                "type": 1,
                              }
                            }
                            propList={
                              [
                                "fill",
                              ]
                            }
                          />
                          <RNSVGCircle
                            cx={40.5}
                            cy={3.5}
                            fill={
                              {
                                "payload": 4294967295,
                                "type": 0,
                              }
                            }
                            name="Oval"
                            propList={
                              [
                                "fill",
                              ]
                            }
                            r={3.5}
                          />
                        </RNSVGGroup>
                      </RNSVGGroup>
                    </RNSVGGroup>
                  </RNSVGSvgView>
                </View>
              </View>
              <Text
                style={
                  {
                    "color": "#fff",
                    "fontSize": 17,
                    "fontWeight": "500",
                    "lineHeight": 24.00000007,
                  }
                }
              >
                警示操作
              </Text>
            </View>
            <View
              accessibilityState={
                {
                  "busy": undefined,
                  "checked": undefined,
                  "disabled": true,
                  "expanded": undefined,
                  "selected": undefined,
                }
              }
              accessibilityValue={
                {
                  "max": undefined,
                  "min": undefined,
                  "now": undefined,
                  "text": undefined,
                }
              }
              accessible={true}
              collapsable={false}
              focusable={true}
              onBlur={[Function]}
              onClick={[Function]}
              onFocus={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                {
                  "alignItems": "center",
                  "backgroundColor": "rgba(0, 0, 0, 0.05)",
                  "borderRadius": 8,
                  "flexDirection": "row",
                  "gap": 8,
                  "justifyContent": "center",
                  "marginHorizontal": "auto",
                  "paddingHorizontal": 24,
                  "paddingVertical": 12,
                  "width": 184,
                }
              }
            >
              <Text
                style={
                  {
                    "color": "rgba(0, 0, 0, 0.15)",
                    "fontSize": 17,
                    "fontWeight": "500",
                    "lineHeight": 24.00000007,
                  }
                }
              >
                警示操作
              </Text>
            </View>
          </View>
          <View
            style={
              [
                {
                  "flexDirection": "column",
                  "gap": 16,
                  "marginBottom": 15,
                  "marginHorizontal": "auto",
                  "padding": 15,
                  "width": "100%",
                },
                undefined,
              ]
            }
          >
            <View
              accessibilityState={
                {
                  "busy": undefined,
                  "checked": undefined,
                  "disabled": false,
                  "expanded": undefined,
                  "selected": undefined,
                }
              }
              accessibilityValue={
                {
                  "max": undefined,
                  "min": undefined,
                  "now": undefined,
                  "text": undefined,
                }
              }
              accessible={true}
              collapsable={false}
              focusable={true}
              onBlur={[Function]}
              onClick={[Function]}
              onFocus={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                {
                  "alignItems": "center",
                  "backgroundColor": "#07c160",
                  "borderRadius": 8,
                  "flexDirection": "row",
                  "gap": 8,
                  "justifyContent": "center",
                  "marginHorizontal": "auto",
                  "paddingHorizontal": 24,
                  "paddingVertical": 10,
                  "width": 184,
                }
              }
            >
              <Text
                style={
                  {
                    "color": "#fff",
                    "fontSize": 14,
                    "fontWeight": "500",
                    "lineHeight": 20,
                  }
                }
              >
                medium 按钮
              </Text>
            </View>
            <View
              accessibilityState={
                {
                  "busy": undefined,
                  "checked": undefined,
                  "disabled": false,
                  "expanded": undefined,
                  "selected": undefined,
                }
              }
              accessibilityValue={
                {
                  "max": undefined,
                  "min": undefined,
                  "now": undefined,
                  "text": undefined,
                }
              }
              accessible={true}
              collapsable={false}
              focusable={true}
              onBlur={[Function]}
              onClick={[Function]}
              onFocus={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                {
                  "alignItems": "center",
                  "backgroundColor": "rgba(0, 0, 0, 0.05)",
                  "borderRadius": 8,
                  "flexDirection": "row",
                  "gap": 8,
                  "justifyContent": "center",
                  "marginHorizontal": "auto",
                  "paddingHorizontal": 24,
                  "paddingVertical": 10,
                  "width": 184,
                }
              }
            >
              <Text
                style={
                  {
                    "color": "rgba(0, 0, 0, 0.9)",
                    "fontSize": 14,
                    "fontWeight": "500",
                    "lineHeight": 20,
                  }
                }
              >
                medium 按钮
              </Text>
            </View>
            <View
              accessibilityState={
                {
                  "busy": undefined,
                  "checked": undefined,
                  "disabled": false,
                  "expanded": undefined,
                  "selected": undefined,
                }
              }
              accessibilityValue={
                {
                  "max": undefined,
                  "min": undefined,
                  "now": undefined,
                  "text": undefined,
                }
              }
              accessible={true}
              collapsable={false}
              focusable={true}
              onBlur={[Function]}
              onClick={[Function]}
              onFocus={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                {
                  "alignItems": "center",
                  "backgroundColor": "#fa5151",
                  "borderRadius": 8,
                  "flexDirection": "row",
                  "gap": 8,
                  "justifyContent": "center",
                  "marginHorizontal": "auto",
                  "paddingHorizontal": 24,
                  "paddingVertical": 10,
                  "width": 184,
                }
              }
            >
              <Text
                style={
                  {
                    "color": "#fff",
                    "fontSize": 14,
                    "fontWeight": "500",
                    "lineHeight": 20,
                  }
                }
              >
                medium 按钮
              </Text>
            </View>
          </View>
          <View
            style={
              [
                {
                  "flexDirection": "column",
                  "gap": 16,
                  "marginBottom": 15,
                  "marginHorizontal": "auto",
                  "padding": 15,
                  "width": "100%",
                },
                {
                  "backgroundColor": "#07c160",
                },
              ]
            }
          >
            <View
              accessibilityState={
                {
                  "busy": undefined,
                  "checked": undefined,
                  "disabled": false,
                  "expanded": undefined,
                  "selected": undefined,
                }
              }
              accessibilityValue={
                {
                  "max": undefined,
                  "min": undefined,
                  "now": undefined,
                  "text": undefined,
                }
              }
              accessible={true}
              collapsable={false}
              focusable={true}
              onBlur={[Function]}
              onClick={[Function]}
              onFocus={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                {
                  "alignItems": "center",
                  "backgroundColor": "#fff",
                  "borderRadius": 8,
                  "flexDirection": "row",
                  "gap": 8,
                  "justifyContent": "center",
                  "marginHorizontal": "auto",
                  "paddingHorizontal": 24,
                  "paddingVertical": 12,
                  "width": 184,
                }
              }
            >
              <Text
                style={
                  {
                    "color": "rgba(0,0,0,.9)",
                    "fontSize": 17,
                    "fontWeight": "500",
                    "lineHeight": 24.00000007,
                  }
                }
              >
                overlay 按钮
              </Text>
            </View>
            <View
              accessibilityState={
                {
                  "busy": undefined,
                  "checked": undefined,
                  "disabled": false,
                  "expanded": undefined,
                  "selected": undefined,
                }
              }
              accessibilityValue={
                {
                  "max": undefined,
                  "min": undefined,
                  "now": undefined,
                  "text": undefined,
                }
              }
              accessible={true}
              collapsable={false}
              focusable={true}
              onBlur={[Function]}
              onClick={[Function]}
              onFocus={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                {
                  "alignItems": "center",
                  "backgroundColor": "hsla(0,0%,97%,.3)",
                  "borderRadius": 8,
                  "flexDirection": "row",
                  "gap": 8,
                  "justifyContent": "center",
                  "marginHorizontal": "auto",
                  "paddingHorizontal": 24,
                  "paddingVertical": 12,
                  "width": 184,
                }
              }
            >
              <Text
                style={
                  {
                    "color": "#fff",
                    "fontSize": 17,
                    "fontWeight": "500",
                    "lineHeight": 24.00000007,
                  }
                }
              >
                overlay 按钮
              </Text>
            </View>
            <View
              accessibilityState={
                {
                  "busy": undefined,
                  "checked": undefined,
                  "disabled": false,
                  "expanded": undefined,
                  "selected": undefined,
                }
              }
              accessibilityValue={
                {
                  "max": undefined,
                  "min": undefined,
                  "now": undefined,
                  "text": undefined,
                }
              }
              accessible={true}
              collapsable={false}
              focusable={true}
              onBlur={[Function]}
              onClick={[Function]}
              onFocus={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                {
                  "alignItems": "center",
                  "backgroundColor": "#fa5151",
                  "borderRadius": 8,
                  "flexDirection": "row",
                  "gap": 8,
                  "justifyContent": "center",
                  "marginHorizontal": "auto",
                  "paddingHorizontal": 24,
                  "paddingVertical": 12,
                  "width": 184,
                }
              }
            >
              <Text
                style={
                  {
                    "color": "#fff",
                    "fontSize": 17,
                    "fontWeight": "500",
                    "lineHeight": 24.00000007,
                  }
                }
              >
                overlay 按钮
              </Text>
            </View>
          </View>
          <View
            style={
              [
                {
                  "flexDirection": "column",
                  "gap": 16,
                  "marginBottom": 15,
                  "marginHorizontal": "auto",
                  "padding": 15,
                  "width": "100%",
                },
                {
                  "backgroundColor": "#07c160",
                },
              ]
            }
          >
            <View
              accessibilityState={
                {
                  "busy": undefined,
                  "checked": undefined,
                  "disabled": true,
                  "expanded": undefined,
                  "selected": undefined,
                }
              }
              accessibilityValue={
                {
                  "max": undefined,
                  "min": undefined,
                  "now": undefined,
                  "text": undefined,
                }
              }
              accessible={true}
              collapsable={false}
              focusable={true}
              onBlur={[Function]}
              onClick={[Function]}
              onFocus={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                {
                  "alignItems": "center",
                  "backgroundColor": "hsla(0,0%,100%,.3)",
                  "borderRadius": 8,
                  "flexDirection": "row",
                  "gap": 8,
                  "justifyContent": "center",
                  "marginHorizontal": "auto",
                  "paddingHorizontal": 24,
                  "paddingVertical": 12,
                  "width": 184,
                }
              }
            >
              <Text
                style={
                  {
                    "color": "hsla(0,0%,97%,.3)",
                    "fontSize": 17,
                    "fontWeight": "500",
                    "lineHeight": 24.00000007,
                  }
                }
              >
                overlay 按钮
              </Text>
            </View>
            <View
              accessibilityState={
                {
                  "busy": undefined,
                  "checked": undefined,
                  "disabled": true,
                  "expanded": undefined,
                  "selected": undefined,
                }
              }
              accessibilityValue={
                {
                  "max": undefined,
                  "min": undefined,
                  "now": undefined,
                  "text": undefined,
                }
              }
              accessible={true}
              collapsable={false}
              focusable={true}
              onBlur={[Function]}
              onClick={[Function]}
              onFocus={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                {
                  "alignItems": "center",
                  "backgroundColor": "hsla(0,0%,100%,.3)",
                  "borderRadius": 8,
                  "flexDirection": "row",
                  "gap": 8,
                  "justifyContent": "center",
                  "marginHorizontal": "auto",
                  "paddingHorizontal": 24,
                  "paddingVertical": 12,
                  "width": 184,
                }
              }
            >
              <Text
                style={
                  {
                    "color": "hsla(0,0%,97%,.3)",
                    "fontSize": 17,
                    "fontWeight": "500",
                    "lineHeight": 24.00000007,
                  }
                }
              >
                overlay 按钮
              </Text>
            </View>
            <View
              accessibilityState={
                {
                  "busy": undefined,
                  "checked": undefined,
                  "disabled": true,
                  "expanded": undefined,
                  "selected": undefined,
                }
              }
              accessibilityValue={
                {
                  "max": undefined,
                  "min": undefined,
                  "now": undefined,
                  "text": undefined,
                }
              }
              accessible={true}
              collapsable={false}
              focusable={true}
              onBlur={[Function]}
              onClick={[Function]}
              onFocus={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                {
                  "alignItems": "center",
                  "backgroundColor": "hsla(0,0%,100%,.3)",
                  "borderRadius": 8,
                  "flexDirection": "row",
                  "gap": 8,
                  "justifyContent": "center",
                  "marginHorizontal": "auto",
                  "paddingHorizontal": 24,
                  "paddingVertical": 12,
                  "width": 184,
                }
              }
            >
              <Text
                style={
                  {
                    "color": "hsla(0,0%,97%,.3)",
                    "fontSize": 17,
                    "fontWeight": "500",
                    "lineHeight": 24.00000007,
                  }
                }
              >
                overlay 按钮
              </Text>
            </View>
          </View>
          <View
            style={
              [
                {
                  "flexDirection": "column",
                  "gap": 16,
                  "marginBottom": 15,
                  "marginHorizontal": "auto",
                  "padding": 15,
                  "width": "100%",
                },
                {
                  "alignItems": "center",
                  "flexDirection": "row",
                  "gap": 24,
                  "justifyContent": "center",
                },
              ]
            }
          >
            <View
              accessibilityState={
                {
                  "busy": undefined,
                  "checked": undefined,
                  "disabled": false,
                  "expanded": undefined,
                  "selected": undefined,
                }
              }
              accessibilityValue={
                {
                  "max": undefined,
                  "min": undefined,
                  "now": undefined,
                  "text": undefined,
                }
              }
              accessible={true}
              collapsable={false}
              focusable={true}
              onBlur={[Function]}
              onClick={[Function]}
              onFocus={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                {
                  "alignItems": "center",
                  "backgroundColor": "#07c160",
                  "borderRadius": 6,
                  "flexDirection": "row",
                  "gap": 8,
                  "justifyContent": "center",
                  "marginHorizontal": 0,
                  "paddingHorizontal": 12,
                  "paddingVertical": 6,
                  "width": "auto",
                }
              }
            >
              <Text
                style={
                  {
                    "color": "#fff",
                    "fontSize": 14,
                    "fontWeight": "500",
                    "lineHeight": 19.999979999999997,
                  }
                }
              >
                按钮
              </Text>
            </View>
            <View
              accessibilityState={
                {
                  "busy": undefined,
                  "checked": undefined,
                  "disabled": false,
                  "expanded": undefined,
                  "selected": undefined,
                }
              }
              accessibilityValue={
                {
                  "max": undefined,
                  "min": undefined,
                  "now": undefined,
                  "text": undefined,
                }
              }
              accessible={true}
              collapsable={false}
              focusable={true}
              onBlur={[Function]}
              onClick={[Function]}
              onFocus={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                {
                  "alignItems": "center",
                  "backgroundColor": "rgba(0, 0, 0, 0.05)",
                  "borderRadius": 6,
                  "flexDirection": "row",
                  "gap": 8,
                  "justifyContent": "center",
                  "marginHorizontal": 0,
                  "paddingHorizontal": 12,
                  "paddingVertical": 6,
                  "width": "auto",
                }
              }
            >
              <Text
                style={
                  {
                    "color": "rgba(0, 0, 0, 0.9)",
                    "fontSize": 14,
                    "fontWeight": "500",
                    "lineHeight": 19.999979999999997,
                  }
                }
              >
                按钮
              </Text>
            </View>
            <View
              accessibilityState={
                {
                  "busy": undefined,
                  "checked": undefined,
                  "disabled": false,
                  "expanded": undefined,
                  "selected": undefined,
                }
              }
              accessibilityValue={
                {
                  "max": undefined,
                  "min": undefined,
                  "now": undefined,
                  "text": undefined,
                }
              }
              accessible={true}
              collapsable={false}
              focusable={true}
              onBlur={[Function]}
              onClick={[Function]}
              onFocus={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                {
                  "alignItems": "center",
                  "backgroundColor": "#fa5151",
                  "borderRadius": 6,
                  "flexDirection": "row",
                  "gap": 8,
                  "justifyContent": "center",
                  "marginHorizontal": 0,
                  "paddingHorizontal": 12,
                  "paddingVertical": 6,
                  "width": "auto",
                }
              }
            >
              <Text
                style={
                  {
                    "color": "#fff",
                    "fontSize": 14,
                    "fontWeight": "500",
                    "lineHeight": 19.999979999999997,
                  }
                }
              >
                按钮
              </Text>
            </View>
          </View>
          <View
            style={
              [
                {
                  "flexDirection": "column",
                  "gap": 16,
                  "marginBottom": 15,
                  "marginHorizontal": "auto",
                  "padding": 15,
                  "width": "100%",
                },
                undefined,
              ]
            }
          >
            <View
              accessibilityState={
                {
                  "busy": undefined,
                  "checked": undefined,
                  "disabled": false,
                  "expanded": undefined,
                  "selected": undefined,
                }
              }
              accessibilityValue={
                {
                  "max": undefined,
                  "min": undefined,
                  "now": undefined,
                  "text": undefined,
                }
              }
              accessible={true}
              collapsable={false}
              focusable={true}
              onBlur={[Function]}
              onClick={[Function]}
              onFocus={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                {
                  "alignItems": "center",
                  "backgroundColor": "rgba(33,150,243,1.00)",
                  "borderRadius": 8,
                  "flexDirection": "row",
                  "gap": 8,
                  "height": 44,
                  "justifyContent": "center",
                  "marginHorizontal": "auto",
                  "paddingHorizontal": 18,
                  "paddingVertical": 12,
                  "width": "auto",
                }
              }
            >
              <Text
                style={
                  {
                    "color": "#fff",
                    "fontSize": 16,
                    "fontWeight": "bold",
                  }
                }
              >
                自定义样式
              </Text>
            </View>
          </View>
        </View>
      </View>
    </View>
  </RCTScrollView>
</RNCSafeAreaView>
`;
