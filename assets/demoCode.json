{
  "button": "import { ReactNode } from 'react';\nimport { View, StyleSheet, Text } from 'react-native';\n\nimport DemoPage from '@/app/(demo)/components/DemoPage';\nimport Button from '@/components/Button';\n\nconst ButtonDemo = () => {\n  return (\n    <DemoPage title={'Button'} desc={'按钮'}>\n      <View style={styles.container}>\n        <ButtonSpArea>\n          {/* 主要操作 start */}\n          <Button type={'primary'}>主要操作</Button>\n          <Button type={'primary'} loading={true}></Button>\n          <Button type={'primary'} loading>\n            主要操作\n          </Button>\n          <Button type={'primary'} disabled={true}>\n            主要操作\n          </Button>\n          {/* 主要操作 end */}\n\n          {/* 次要操作 start */}\n          <Button type={'default'}>次要操作</Button>\n          <Button loading={true}></Button>\n          <Button loading>次要操作</Button>\n          <Button disabled={true}>次要操作</Button>\n          {/* 次要操作 end */}\n\n          {/* 警示操作 start */}\n          <Button type={'warn'}>警示操作</Button>\n          <Button type={'warn'} loading></Button>\n          <Button type={'warn'} loading>\n            警示操作\n          </Button>\n          <Button type={'warn'} disabled={true}>\n            警示操作\n          </Button>\n          {/* 警示操作 end */}\n        </ButtonSpArea>\n\n        <ButtonSpArea>\n          <Button type={'primary'} size={'medium'}>\n            medium 按钮\n          </Button>\n          <Button type={'default'} size={'medium'}>\n            medium 按钮\n          </Button>\n          <Button type={'warn'} size={'medium'}>\n            medium 按钮\n          </Button>\n        </ButtonSpArea>\n\n        <ButtonSpArea style={styles.overlay}>\n          <Button type={'primary'} overlay>\n            overlay 按钮\n          </Button>\n          <Button type={'default'} overlay>\n            overlay 按钮\n          </Button>\n          <Button type={'warn'} overlay>\n            overlay 按钮\n          </Button>\n        </ButtonSpArea>\n\n        <ButtonSpArea style={styles.overlay}>\n          <Button type={'primary'} overlay disabled>\n            overlay 按钮\n          </Button>\n          <Button type={'default'} overlay disabled>\n            overlay 按钮\n          </Button>\n          <Button type={'warn'} overlay disabled>\n            overlay 按钮\n          </Button>\n        </ButtonSpArea>\n\n        <ButtonSpArea\n          style={{\n            flexDirection: 'row',\n            alignItems: 'center',\n            justifyContent: 'center',\n            gap: 24,\n          }}\n        >\n          <Button\n            type={'primary'}\n            size={'mini'}\n            style={{ marginHorizontal: 0 }}\n          >\n            按钮\n          </Button>\n          <Button\n            type={'default'}\n            size={'mini'}\n            style={{ marginHorizontal: 0 }}\n          >\n            按钮\n          </Button>\n          <Button type={'warn'} size={'mini'} style={{ marginHorizontal: 0 }}>\n            按钮\n          </Button>\n        </ButtonSpArea>\n\n        <ButtonSpArea>\n          <Button\n            type={'primary'}\n            style={({ pressed }) => {\n              return {\n                width: 'auto',\n                height: 44,\n                paddingHorizontal: 18,\n                backgroundColor: pressed\n                  ? '#1A79C5FF'\n                  : 'rgba(33,150,243,1.00)',\n              };\n            }}\n          >\n            <Text\n              style={{\n                color: '#fff',\n                fontSize: 16,\n                fontWeight: 'bold',\n              }}\n            >\n              自定义样式\n            </Text>\n          </Button>\n        </ButtonSpArea>\n      </View>\n    </DemoPage>\n  );\n};\n\nconst ButtonSpArea = ({\n  children,\n  style,\n}: {\n  children: ReactNode;\n  style?: any;\n}) => {\n  return (\n    <View\n      style={[\n        {\n          width: '100%',\n          marginHorizontal: 'auto',\n          marginBottom: 15,\n          padding: 15,\n          flexDirection: 'column',\n          gap: 16,\n        },\n        style,\n      ]}\n    >\n      {children}\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {},\n  overlay: {\n    backgroundColor: '#07c160',\n  },\n});\n\nexport default ButtonDemo;\n",
  "dialog": "import { useState } from 'react';\nimport { View } from 'react-native';\n\nimport DemoPage from '@/app/(demo)/components/DemoPage';\nimport Button from '@/components/Button';\nimport Dialog from '@/components/Dialog/Dialog';\n\nconst DialogDemo = () => {\n  const [modalVisible, setModalVisible] = useState(false);\n  const [modalVisible2, setModalVisible2] = useState(false);\n\n  const showDialogStyle1 = () => {\n    setModalVisible(true);\n  };\n\n  const showDialogStyle2 = () => {\n    setModalVisible2(true);\n  };\n\n  // 命令式演示\n  const showDialogStyle3 = () => {\n    const close = Dialog.confirm({\n      title: '弹窗标题',\n      content:\n        '弹窗内容，告知当前状态、信息和解决方法，描述文字尽量控制在三行内',\n      verticalAction: true, // 垂直操作栏\n      onConfirm: () => {\n        console.log('confirm');\n        close();\n      },\n      onCancel: () => {\n        console.log('cancel');\n        close();\n      },\n      onClose: () => {\n        console.log('close');\n        close();\n      },\n      onMaskPress: () => {\n        console.log('mask press');\n        close();\n      },\n    });\n  };\n\n  return (\n    <DemoPage title={'Dialog'} desc={'对话框'}>\n      <View>\n        <View style={{ gap: 16 }}>\n          <Button onPress={showDialogStyle1}>样式一</Button>\n          <Button onPress={showDialogStyle2}>样式二</Button>\n          <Button onPress={showDialogStyle3}>样式三</Button>\n        </View>\n      </View>\n\n      {/*样式一*/}\n      <Dialog\n        visible={modalVisible}\n        title={'弹窗标题'}\n        content={\n          '弹窗内容，告知当前状态、信息和解决方法，描述文字尽量控制在三行内'\n        }\n        onClose={() => setModalVisible(false)}\n        onMaskPress={() => setModalVisible(false)}\n        onConfirm={() => setModalVisible(false)}\n        onCancel={() => setModalVisible(false)}\n      />\n\n      {/*样式二*/}\n      <Dialog\n        visible={modalVisible2}\n        content={\n          '弹窗内容，告知当前状态、信息和解决方法，描述文字尽量控制在三行内'\n        }\n        confirmType={'warn'}\n        onClose={() => setModalVisible2(false)}\n        onMaskPress={() => setModalVisible2(false)}\n        onConfirm={() => setModalVisible2(false)}\n        onCancel={() => setModalVisible2(false)}\n      />\n    </DemoPage>\n  );\n};\n\nexport default DialogDemo;\n",
  "input": "import { useState } from 'react';\nimport { View, StyleSheet } from 'react-native';\n\nimport DemoPage from '@/app/(demo)/components/DemoPage';\nimport Input from '@/components/Input';\n\nconst InputDemo = () => {\n  const [value, setValue] = useState('');\n\n  return (\n    <DemoPage title={'Input'} desc={'输入框'}>\n      <View style={styles.container}>\n        <Input value={value} onChangeText={(v) => setValue(v)} />\n      </View>\n    </DemoPage>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n});\n\nexport default InputDemo;\n",
  "list": "import { ReactNode } from 'react';\nimport { View, StyleSheet, Text } from 'react-native';\n\nimport DemoPage from '@/app/(demo)/components/DemoPage';\n\nconst ListDemo = () => {\n  return (\n    <DemoPage title={'List'} desc={'列表'}>\n      <View style={styles.container}></View>\n    </DemoPage>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {},\n});\n\nexport default ListDemo;\n"
}